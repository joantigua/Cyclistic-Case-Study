library(readr)
X202311_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/.csv/202311-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ended_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ride_length = col_time(format = "%H:%M:%S")))
View(X202311_divvy_tripdata)
library(readr)
X202312_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/.csv/202312-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ended_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ride_length = col_time(format = "%H:%M:%S")))
View(X202312_divvy_tripdata)
library(readr)
X202401_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/.csv/202401-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ended_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ride_length = col_time(format = "%H:%M:%S")))
View(X202401_divvy_tripdata)
library(readr)
X202402_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/.csv/202402-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ended_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ride_length = col_time(format = "%H:%M:%S")))
View(X202402_divvy_tripdata)
library(readr)
X202403_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/.csv/202403-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ended_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ride_length = col_time(format = "%H:%M:%S")))
View(X202403_divvy_tripdata)
library(readr)
X202404_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/.csv/202404-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ended_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ride_length = col_time(format = "%H:%M:%S")))
View(X202404_divvy_tripdata)
View(X202404_divvy_tripdata)
View(X202404_divvy_tripdata)
problems(X202404_divvy_tripdata)
`print(n = 1000)
problems(X202404_divvy_tripdata)
problems(X202404_divvy_tripdata)
problems(X202404_divvy_tripdata)
View(X202404_divvy_tripdata)
View(X202404_divvy_tripdata)
View(X202305_divvy_tripdata)
View(X202305_divvy_tripdata)
library(readr)
X202305_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/.csv/202305-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ended_at = col_datetime(format = "%m/%d/%Y %H:%M")))
View(X202305_divvy_tripdata)
library(readr)
X202306_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/.csv/202306-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ended_at = col_datetime(format = "%m/%d/%Y %H:%M")))
View(X202306_divvy_tripdata)
library(readr)
X202307_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/.csv/202307-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%m/%d/%Y %H:%M"),
ended_at = col_datetime(format = "%m/%d/%Y %H:%M")))
View(X202307_divvy_tripdata)
problems(X202307_divvy_tripdata)
problems(X202305_divvy_tripdata)
library(readr)
X202301_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202301-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202301_divvy_tripdata)
install.packages("tidyverse")
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
library(stringr) # Load the stringr package
df$A <- str_trim(df$A, side = "right")
library(stringr) # Load the stringr package
X202301_divvy_tripdata$start_station_name <- ifelse
library(stringr) # Load the stringr package
X202301_divvy_tripdata$start_station_name <- ifelse(str_ends(X202301_divvy_tripdata$start_station_name, "*"),
substr(
X202301_divvy_tripdata$start_station_name,
1,
nchar(X202301_divvy_tripdata$start_station_name) - 1
),
X202301_divvy_tripdata$start_station_name
)
library(stringr) # Load the stringr package
X202301_divvy_tripdata$start_station_name <- ifelse(str_ends(X202301_divvy_tripdata$start_station_name, "*"),substr(X202301_divvy_tripdata$start_station_name,1,nchar(X202301_divvy_tripdata$start_station_name) - 1),X202301_divvy_tripdata$start_station_name)
library(stringr) # Load the stringr package
X202301_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202301_divvy_tripdata$start_station_name, "*"),  # Check if ends with asterisk (corrected)
substr(X202301_divvy_tripdata$start_station_name, 1, nchar(X202301_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202301_divvy_tripdata$start_station_name)  # Keep original value if false
library(stringr) # Load the stringr package
X202301_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202301_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk (corrected)
substr(X202301_divvy_tripdata$start_station_name, 1, nchar(X202301_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202301_divvy_tripdata$start_station_name)  # Keep original value if false
library(stringr) # Load the stringr package
X202301_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202301_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk (corrected)
substr(X202301_divvy_tripdata$start_station_name, 1, nchar(X202301_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202301_divvy_tripdata$start_station_name)  # Keep original value if false
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
na.omit(X202301_divvy_tripdata[, c("end_station_name", "end_station_id", "start_station_name", "start_station_id")]) #Delete all rows that have an NA value in the  columns "end_station_name", "end_station_id","start_station_name" and "start_station_id"
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
X202301_divvy_tripdata <- na.omit(X202301_divvy_tripdata[, c("end_station_name", "end_station_id", "start_station_name", "start_station_id")]) #Delete all rows that have an NA value in the  columns "end_station_name", "end_station_id","start_station_name" and "start_station_id"
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
library(readr)
X202301_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202301-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202301_divvy_tripdata)
library(stringr) # Load the stringr package
X202301_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202301_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk (corrected)
substr(X202301_divvy_tripdata$start_station_name, 1, nchar(X202301_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202301_divvy_tripdata$start_station_name)  # Keep original value if false
X202301_divvy_tripdata <- na.omit(X202301_divvy_tripdata[, c("end_station_name", "end_station_id", "start_station_name", "start_station_id")]) #Delete all rows that have an NA value in the  columns "end_station_name","end_station_id","start_station_name" and "start_station_id"
library(readr)
X202301_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202301-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202301_divvy_tripdata)
install.packages("tidyverse")
library(stringr) # Load the stringr package
X202301_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202301_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk (corrected)
substr(X202301_divvy_tripdata$start_station_name, 1, nchar(X202301_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202301_divvy_tripdata$start_station_name)  # Keep original value if false
X202301_divvy_tripdata <- na.omit(X202301_divvy_tripdata) #Delete all rows that have an NA value in any columns
install.packages("tidyverse")
library(stringr) # Load the stringr package
X202301_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202301_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk (corrected)
substr(X202301_divvy_tripdata$start_station_name, 1, nchar(X202301_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202301_divvy_tripdata$start_station_name)  # Keep original value if false
X202301_divvy_tripdata <- na.omit(X202301_divvy_tripdata) #Delete all rows that have an NA value in any columns
X202301_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202301_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202301_divvy_tripdata$end_station_name, 1, nchar(X202301_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202301_divvy_tripdata$end_station_name)  # Keep original value if false
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
X202301_divvy_tripdata$ride_length <- mod(difftime(X202301_divvy_tripdata$ended_at, df$started_at, units = "mins"), 60)#Created column ride_length
library(tidyverse)
X202301_divvy_tripdata <- X202301_divvy_tripdata %>%
mutate(time_diff_mins = difftime(ended_at, started_at, units = "mins"),
ride_length = mod(time_diff_mins, 60))
rlang::last_trace()
rlang::last_trace(drop = FALSE)
X202301_divvy_tripdata <- X202301_divvy_tripdata %>%
mutate(time_diff_mins = difftime(ended_at, started_at, units = "mins"),
ride_length = dplyr::mod(time_diff_mins, 60))
rlang::last_trace()
X202301_divvy_tripdata$time_diff_mins <- difftime(X202301_divvy_tripdata$ended_at, X202301_divvy_tripdata$started_at, units = "mins")
X202301_divvy_tripdata$ride_length <- X202301_divvy_tripdata$time_diff_mins %% 60
X202301_divvy_tripdata$time_diff_mins <- difftime(X202301_divvy_tripdata$ended_at, X202301_divvy_tripdata$started_at, units = "mins")
X202301_divvy_tripdata$ride_length <- X202301_divvy_tripdata$time_diff_mins %% 60
X202301_divvy_tripdata$time_diff_mins <- difftime(X202301_divvy_tripdata$ended_at, X202301_divvy_tripdata$started_at, units = "mins")
X202301_divvy_tripdata$ride_length <- X202301_divvy_tripdata$time_diff_mins %% 60
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
X202301_divvy_tripdata$time_diff_mins <- difftime(X202301_divvy_tripdata$ended_at, X202301_divvy_tripdata$started_at, units = "mins")
X202301_divvy_tripdata$ride_length <- as.numeric(X202301_divvy_tripdata$time_diff_mins) %% 60
X202301_divvy_tripdata <- select(X202301_divvy_tripdata, -time_diff_mins)
X202301_divvy_tripdata$time_diff_mins <- difftime(X202301_divvy_tripdata$ended_at, X202301_divvy_tripdata$started_at, units = "mins")
X202301_divvy_tripdata$ride_length <- as.numeric(X202301_divvy_tripdata$time_diff_mins) %% 60
X202301_divvy_tripdata <- select(X202301_divvy_tripdata, -time_diff_mins)
X202301_divvy_tripdata$ride_length <- X202301_divvy_tripdata$ride_length * 60
X202301_divvy_tripdata <- X202301_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
library(readr)
X202302_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202302-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202302_divvy_tripdata)
X202302_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202302_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202302_divvy_tripdata$start_station_name, 1, nchar(X202302_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202302_divvy_tripdata$start_station_name)  # Keep original value if false
install.packages("tidyverse")# install the tidyverse package
library(stringr) # Load the stringr package
library(tidyverse)# Load the tidyverse package
X202302_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202302_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202302_divvy_tripdata$start_station_name, 1, nchar(X202302_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202302_divvy_tripdata$start_station_name)  # Keep original value if false
X202302_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202302_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202302_divvy_tripdata$end_station_name, 1, nchar(X202302_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202302_divvy_tripdata$end_station_name)  # Keep original value if false
#Delete all rows that have an NA value in any columns
X202302_divvy_tripdata <- na.omit(X202302_divvy_tripdata)
#Created column ride_length in seconds
X202302_divvy_tripdata$time_diff_mins <- difftime(X202302_divvy_tripdata$ended_at, X202302_divvy_tripdata$started_at, units = "mins")
X202302_divvy_tripdata$ride_length <- as.numeric(X202302_divvy_tripdata$time_diff_mins) %% 60
X202302_divvy_tripdata <- select(X202302_divvy_tripdata, -time_diff_mins)
X202302_divvy_tripdata$ride_length <- X202302_divvy_tripdata$ride_length * 60
#Created column day_of_week
X202302_divvy_tripdata <- X202302_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
install.packages("tidyverse")# install the tidyverse package
library(stringr) # Load the stringr package
library(tidyverse)# Load the tidyverse package
X202302_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202302_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202302_divvy_tripdata$start_station_name, 1, nchar(X202302_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202302_divvy_tripdata$start_station_name)  # Keep original value if false
X202302_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202302_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202302_divvy_tripdata$end_station_name, 1, nchar(X202302_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202302_divvy_tripdata$end_station_name)  # Keep original value if false
#Delete all rows that have an NA value in any columns
X202302_divvy_tripdata <- na.omit(X202302_divvy_tripdata)
#Created column ride_length in seconds
X202302_divvy_tripdata$time_diff_mins <- difftime(X202302_divvy_tripdata$ended_at, X202302_divvy_tripdata$started_at, units = "mins")
X202302_divvy_tripdata$ride_length <- as.numeric(X202302_divvy_tripdata$time_diff_mins) %% 60
X202302_divvy_tripdata <- select(X202302_divvy_tripdata, -time_diff_mins)
X202302_divvy_tripdata$ride_length <- X202302_divvy_tripdata$ride_length * 60
#Created column day_of_week
X202302_divvy_tripdata <- X202302_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
library(readr)
X202303_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202303-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202303_divvy_tripdata)
X202303_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202303_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202303_divvy_tripdata$start_station_name, 1, nchar(X202303_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202303_divvy_tripdata$start_station_name)  # Keep original value if false
X202303_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202303_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202303_divvy_tripdata$end_station_name, 1, nchar(X202303_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202303_divvy_tripdata$end_station_name)  # Keep original value if false
#Delete all rows that have an NA value in any columns
X202303_divvy_tripdata <- na.omit(X202303_divvy_tripdata)
#Created column ride_length in seconds
X202303_divvy_tripdata$time_diff_mins <- difftime(X202303_divvy_tripdata$ended_at, X202303_divvy_tripdata$started_at, units = "mins")
X202303_divvy_tripdata$ride_length <- as.numeric(X202303_divvy_tripdata$time_diff_mins) %% 60
X202303_divvy_tripdata <- select(X202303_divvy_tripdata, -time_diff_mins)
X202303_divvy_tripdata$ride_length <- X202303_divvy_tripdata$ride_length * 60
#Created column day_of_week
X202303_divvy_tripdata <- X202303_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
library(readr)
X202304_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202304-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202304_divvy_tripdata)
X202304_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202304_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202304_divvy_tripdata$start_station_name, 1, nchar(X202304_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202304_divvy_tripdata$start_station_name)  # Keep original value if false
X202304_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202304_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202304_divvy_tripdata$end_station_name, 1, nchar(X202304_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202304_divvy_tripdata$end_station_name)  # Keep original value if false
#Delete all rows that have an NA value in any columns
X202304_divvy_tripdata <- na.omit(X202304_divvy_tripdata)
#Created column ride_length in seconds
X202304_divvy_tripdata$time_diff_mins <- difftime(X202304_divvy_tripdata$ended_at, X202304_divvy_tripdata$started_at, units = "mins")
X202304_divvy_tripdata$ride_length <- as.numeric(X202304_divvy_tripdata$time_diff_mins) %% 60
X202304_divvy_tripdata <- select(X202304_divvy_tripdata, -time_diff_mins)
X202304_divvy_tripdata$ride_length <- X202304_divvy_tripdata$ride_length * 60
#Created column day_of_week
X202304_divvy_tripdata <- X202304_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
library(readr)
X202305_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202305-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202305_divvy_tripdata)
X202305_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202305_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202305_divvy_tripdata$start_station_name, 1, nchar(X202305_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202305_divvy_tripdata$start_station_name)  # Keep original value if false
X202305_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202305_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202305_divvy_tripdata$end_station_name, 1, nchar(X202305_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202305_divvy_tripdata$end_station_name)  # Keep original value if false
#Delete all rows that have an NA value in any columns
X202305_divvy_tripdata <- na.omit(X202305_divvy_tripdata)
#Created column ride_length in seconds
X202305_divvy_tripdata$time_diff_mins <- difftime(X202305_divvy_tripdata$ended_at, X202305_divvy_tripdata$started_at, units = "mins")
X202305_divvy_tripdata$ride_length <- as.numeric(X202305_divvy_tripdata$time_diff_mins) %% 60
X202305_divvy_tripdata <- select(X202305_divvy_tripdata, -time_diff_mins)
X202305_divvy_tripdata$ride_length <- X202305_divvy_tripdata$ride_length * 60
#Created column day_of_week
X202305_divvy_tripdata <- X202305_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
library(readr)
X202306_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202306-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202306_divvy_tripdata)
X202306_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202306_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202306_divvy_tripdata$start_station_name, 1, nchar(X202306_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202306_divvy_tripdata$start_station_name)  # Keep original value if false
X202306_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202306_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202306_divvy_tripdata$end_station_name, 1, nchar(X202306_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202306_divvy_tripdata$end_station_name)  # Keep original value if false
#Delete all rows that have an NA value in any columns
X202306_divvy_tripdata <- na.omit(X202306_divvy_tripdata)
#Created column ride_length in seconds
X202306_divvy_tripdata$time_diff_mins <- difftime(X202306_divvy_tripdata$ended_at, X202306_divvy_tripdata$started_at, units = "mins")
X202306_divvy_tripdata$ride_length <- as.numeric(X202306_divvy_tripdata$time_diff_mins) %% 60
X202306_divvy_tripdata <- select(X202306_divvy_tripdata, -time_diff_mins)
X202306_divvy_tripdata$ride_length <- X202306_divvy_tripdata$ride_length * 60
#Created column day_of_week
X202306_divvy_tripdata <- X202306_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
library(readr)
X202307_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202307-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202307_divvy_tripdata)
X202307_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202307_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202307_divvy_tripdata$start_station_name, 1, nchar(X202307_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202307_divvy_tripdata$start_station_name)  # Keep original value if false
X202307_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202307_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202307_divvy_tripdata$end_station_name, 1, nchar(X202307_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202307_divvy_tripdata$end_station_name)  # Keep original value if false
#Delete all rows that have an NA value in any columns
X202307_divvy_tripdata <- na.omit(X202307_divvy_tripdata)
#Created column ride_length in seconds
X202307_divvy_tripdata$time_diff_mins <- difftime(X202307_divvy_tripdata$ended_at, X202307_divvy_tripdata$started_at, units = "mins")
X202307_divvy_tripdata$ride_length <- as.numeric(X202307_divvy_tripdata$time_diff_mins) %% 60
X202307_divvy_tripdata <- select(X202307_divvy_tripdata, -time_diff_mins)
X202307_divvy_tripdata$ride_length <- X202307_divvy_tripdata$ride_length * 60
#Created column day_of_week
X202307_divvy_tripdata <- X202307_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
library(readr)
X202308_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202308-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202308_divvy_tripdata)
X202308_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202308_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202308_divvy_tripdata$start_station_name, 1, nchar(X202308_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202308_divvy_tripdata$start_station_name)  # Keep original value if false
X202308_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202308_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202308_divvy_tripdata$end_station_name, 1, nchar(X202308_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202308_divvy_tripdata$end_station_name)  # Keep original value if false
#Delete all rows that have an NA value in any columns
X202308_divvy_tripdata <- na.omit(X202308_divvy_tripdata)
#Created column ride_length in seconds
X202308_divvy_tripdata$time_diff_mins <- difftime(X202308_divvy_tripdata$ended_at, X202308_divvy_tripdata$started_at, units = "mins")
X202308_divvy_tripdata$ride_length <- as.numeric(X202308_divvy_tripdata$time_diff_mins) %% 60
X202308_divvy_tripdata <- select(X202308_divvy_tripdata, -time_diff_mins)
X202308_divvy_tripdata$ride_length <- X202308_divvy_tripdata$ride_length * 60
#Created column day_of_week
X202308_divvy_tripdata <- X202308_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
library(readr)
X202309_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202309-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202309_divvy_tripdata)
X202309_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202309_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202309_divvy_tripdata$start_station_name, 1, nchar(X202309_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202309_divvy_tripdata$start_station_name)  # Keep original value if false
X202309_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202309_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202309_divvy_tripdata$end_station_name, 1, nchar(X202309_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202309_divvy_tripdata$end_station_name)  # Keep original value if false
#Delete all rows that have an NA value in any columns
X202309_divvy_tripdata <- na.omit(X202309_divvy_tripdata)
#Created column ride_length in seconds
X202309_divvy_tripdata$time_diff_mins <- difftime(X202309_divvy_tripdata$ended_at, X202309_divvy_tripdata$started_at, units = "mins")
X202309_divvy_tripdata$ride_length <- as.numeric(X202309_divvy_tripdata$time_diff_mins) %% 60
X202309_divvy_tripdata <- select(X202309_divvy_tripdata, -time_diff_mins)
X202309_divvy_tripdata$ride_length <- X202309_divvy_tripdata$ride_length * 60
#Created column day_of_week
X202309_divvy_tripdata <- X202309_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
library(readr)
X202310_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202310-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202310_divvy_tripdata)
X202310_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202310_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202310_divvy_tripdata$start_station_name, 1, nchar(X202310_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202310_divvy_tripdata$start_station_name)  # Keep original value if false
X202310_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202310_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202310_divvy_tripdata$end_station_name, 1, nchar(X202310_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202310_divvy_tripdata$end_station_name)  # Keep original value if false
#Delete all rows that have an NA value in any columns
X202310_divvy_tripdata <- na.omit(X202310_divvy_tripdata)
#Created column ride_length in seconds
X202310_divvy_tripdata$time_diff_mins <- difftime(X202310_divvy_tripdata$ended_at, X202310_divvy_tripdata$started_at, units = "mins")
X202310_divvy_tripdata$ride_length <- as.numeric(X202310_divvy_tripdata$time_diff_mins) %% 60
X202310_divvy_tripdata <- select(X202310_divvy_tripdata, -time_diff_mins)
X202310_divvy_tripdata$ride_length <- X202310_divvy_tripdata$ride_length * 60
#Created column day_of_week
X202310_divvy_tripdata <- X202310_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
library(readr)
X202311_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202311-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202311_divvy_tripdata)
X202311_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202311_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202311_divvy_tripdata$start_station_name, 1, nchar(X202311_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202311_divvy_tripdata$start_station_name)  # Keep original value if false
X202311_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202311_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202311_divvy_tripdata$end_station_name, 1, nchar(X202311_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202311_divvy_tripdata$end_station_name)  # Keep original value if false
#Delete all rows that have an NA value in any columns
X202311_divvy_tripdata <- na.omit(X202311_divvy_tripdata)
#Created column ride_length in seconds
X202311_divvy_tripdata$time_diff_mins <- difftime(X202311_divvy_tripdata$ended_at, X202311_divvy_tripdata$started_at, units = "mins")
X202311_divvy_tripdata$ride_length <- as.numeric(X202311_divvy_tripdata$time_diff_mins) %% 60
X202311_divvy_tripdata <- select(X202311_divvy_tripdata, -time_diff_mins)
X202311_divvy_tripdata$ride_length <- X202311_divvy_tripdata$ride_length * 60
#Created column day_of_week
X202311_divvy_tripdata <- X202311_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
library(readr)
X202312_divvy_tripdata <- read_csv("C:/Users/joana/Downloads/divvy-tripdata/RawData/202312-divvy-tripdata.csv",
col_types = cols(started_at = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
ended_at = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(X202312_divvy_tripdata)
X202312_divvy_tripdata$start_station_name <- ifelse(
str_ends(X202312_divvy_tripdata$start_station_name, "\\*"),  # Check if ends with asterisk
substr(X202312_divvy_tripdata$start_station_name, 1, nchar(X202312_divvy_tripdata$start_station_name) - 1),  # Substring if true
X202312_divvy_tripdata$start_station_name)  # Keep original value if false
X202312_divvy_tripdata$end_station_name <- ifelse(
str_ends(X202312_divvy_tripdata$end_station_name, "\\*"),  # Check if ends with asterisk
substr(X202312_divvy_tripdata$end_station_name, 1, nchar(X202312_divvy_tripdata$end_station_name) - 1),  # Substring if true
X202312_divvy_tripdata$end_station_name)  # Keep original value if false
#Delete all rows that have an NA value in any columns
X202312_divvy_tripdata <- na.omit(X202312_divvy_tripdata)
#Created column ride_length in seconds
X202312_divvy_tripdata$time_diff_mins <- difftime(X202312_divvy_tripdata$ended_at, X202312_divvy_tripdata$started_at, units = "mins")
X202312_divvy_tripdata$ride_length <- as.numeric(X202312_divvy_tripdata$time_diff_mins) %% 60
X202312_divvy_tripdata <- select(X202312_divvy_tripdata, -time_diff_mins)
X202312_divvy_tripdata$ride_length <- X202312_divvy_tripdata$ride_length * 60
#Created column day_of_week
X202312_divvy_tripdata <- X202312_divvy_tripdata %>%
mutate(day_of_week = weekdays(ended_at))
X2023_divvy_tripdata <- rbind(X202301_divvy_tripdata, X202302_divvy_tripdata, X202303_divvy_tripdata, X202304_divvy_tripdata, X202305_divvy_tripdata, X202306_divvy_tripdata, X202307_divvy_tripdata, X202308_divvy_tripdata, X202309_divvy_tripdata, X202310_divvy_tripdata, X202311_divvy_tripdata, X202312_divvy_tripdata)
View(X2023_divvy_tripdata)
View(X2023_divvy_tripdata)
#Create column ride_length in seconds
X2023_divvy_tripdata$time_diff_mins <- difftime(X2023_divvy_tripdata$ended_at, X2023_divvy_tripdata$started_at, units = "mins")
X2023_divvy_tripdata$ride_length <- as.numeric(X2023_divvy_tripdata$time_diff_mins) %% 60
X2023_divvy_tripdata <- select(X2023_divvy_tripdata, -time_diff_mins)
X2023_divvy_tripdata$ride_length <- X2023_divvy_tripdata$ride_length * 60
View(X2023_divvy_tripdata)
mean(X2023_divvy_tripdata$ride_length) #straight average (total ride length / rides)
mean(X2023_divvy_tripdata$ride_length) * 60
mean(X2023_divvy_tripdata$ride_length) / 60
median(X2023_divvy_tripdata$ride_length) / 60
mean(X2023_divvy_tripdata$ride_length) / 60
median(X2023_divvy_tripdata$ride_length) / 60
max(X2023_divvy_tripdata$ride_length) / 60
min(X2023_divvy_tripdata$ride_length) / 60
summary(X2023_divvy_tripdata$ride_length)
aggregate(X2023_divvy_tripdata$ride_length ~ X2023_divvy_tripdata$member_casual, FUN = mean)
aggregate(X2023_divvy_tripdata$ride_length ~ X2023_divvy_tripdata$member_casual, FUN = median)
aggregate(X2023_divvy_tripdata$ride_length ~ X2023_divvy_tripdata$member_casual, FUN = max)
aggregate(X2023_divvy_tripdata$ride_length ~ X2023_divvy_tripdata$member_casual, FUN = min)
X2023_divvy_tripdata$time_diff_seconds <- difftime(X2023_divvy_tripdata$ended_at, X2023_divvy_tripdata$started_at, units = "secs")
X2023_divvy_tripdata$ride_length <- X2023_divvy_tripdata$time_diff_seconds
X2023_divvy_tripdata <- select(X2023_divvy_tripdata, -time_diff_mins)
X2023_divvy_tripdata$time_diff_seconds <- difftime(X2023_divvy_tripdata$ended_at, X2023_divvy_tripdata$started_at, units = "secs")
X2023_divvy_tripdata$ride_length <- X2023_divvy_tripdata$time_diff_seconds
X2023_divvy_tripdata <- select(X2023_divvy_tripdata, -time_diff_seconds)
X2023_divvy_tripdata <- X2023_divvy_tripdata[X2023_divvy_tripdata$ride_length >= 120, ]
aggregate(X2023_divvy_tripdata$ride_length ~ X2023_divvy_tripdata$member_casual +
X2023_divvy_tripdata$day_of_week, FUN = mean)
X2023_divvy_tripdata %>%
mutate(weekday = wday(started_at, label = TRUE)) %>%
group_by(member_casual, day_of_week) %>%
summarise(number_of_rides = n()
,average_duration = mean(ride_length)) %>%
arrange(member_casual, day_of_week) %>%
ggplot(aes(x = day_of_week, y = average_duration, fill = member_casual)) +
geom_col(position = "dodge")
write.csv(X2023_divvy_tripdata, file = 'X2023_divvy_tripdata.csv')
install.packages("snappy")
write.csv(X2023_divvy_tripdata, file = 'X2023_divvy_tripdata.csv')
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
View(X202301_divvy_tripdata)
View(X2023_divvy_tripdata)
View(X2023_divvy_tripdata)
